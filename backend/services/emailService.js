const nodemailer = require('nodemailer');

class EmailService {
  constructor() {
    // T·∫°o transporter cho Gmail
    this.transporter = nodemailer.createTransport({
      service: 'gmail',
      auth: {
        user: process.env.EMAIL_USER, // Email c·ªßa b·∫°n
        pass: process.env.EMAIL_PASS  // App password c·ªßa Gmail
      }
    });
  }

  // Template HTML cho email x√°c nh·∫≠n ƒë∆°n h√†ng
  generateOrderConfirmationHTML(orderData) {
    const {
      customerName,
      customerEmail,
      orderId,
      orderDate,
      shippingAddress,
      paymentMethod,
      products,
      subtotal,
      shippingFee,
      discount,
      totalAmount,
      voucher
    } = orderData;

    // Format ti·ªÅn Vi·ªát
    const formatVND = (amount) => {
      return new Intl.NumberFormat('vi-VN', {
        style: 'currency',
        currency: 'VND'
      }).format(amount);
    };

    // Format ng√†y
    const formatDate = (date) => {
      return new Intl.DateTimeFormat('vi-VN', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
      }).format(new Date(date));
    };

    const productsHTML = products.map(product => `
      <tr>
        <td style="padding: 10px; border-bottom: 1px solid #eee;">
          <div style="display: flex; align-items: center;">
            <div>
              <h4 style="margin: 0; color: #333;">${product.ten_san_pham}</h4>
              <p style="margin: 5px 0 0 0; color: #666; font-size: 14px;">
                M√†u: ${product.mau_sac} | K√≠ch th∆∞·ªõc: ${product.kich_thuoc}
              </p>
            </div>
          </div>
        </td>
        <td style="padding: 10px; border-bottom: 1px solid #eee; text-align: center;">
          ${product.so_luong}
        </td>
        <td style="padding: 10px; border-bottom: 1px solid #eee; text-align: right;">
          ${formatVND(product.gia)}
        </td>
        <td style="padding: 10px; border-bottom: 1px solid #eee; text-align: right; font-weight: bold;">
          ${formatVND(product.gia * product.so_luong)}
        </td>
      </tr>
    `).join('');

    return `
      <!DOCTYPE html>
      <html lang="vi">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>X√°c nh·∫≠n ƒë∆°n h√†ng #${orderId}</title>
      </head>
      <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px;">
        
        <!-- Header -->
        <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0;">
          <h1 style="margin: 0; font-size: 28px;">KazeWebsite</h1>
          <p style="margin: 10px 0 0 0; font-size: 16px; opacity: 0.9;">C·∫£m ∆°n b·∫°n ƒë√£ ƒë·∫∑t h√†ng!</p>
        </div>

        <!-- Main Content -->
        <div style="background: #fff; padding: 30px; border: 1px solid #eee; border-top: none;">
          
          <!-- Greeting -->
          <h2 style="color: #333; margin-bottom: 20px;">Ch√†o ${customerName}!</h2>
          <p style="font-size: 16px; margin-bottom: 25px;">
            ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t th√†nh c√¥ng. Ch√∫ng t√¥i ƒëang x·ª≠ l√Ω ƒë∆°n h√†ng v√† s·∫Ω giao h√†ng s·ªõm nh·∫•t c√≥ th·ªÉ.
          </p>

          <!-- Order Info -->
          <div style="background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 25px;">
            <h3 style="margin: 0 0 15px 0; color: #333;">Th√¥ng tin ƒë∆°n h√†ng</h3>
            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 10px;">
              <div><strong>M√£ ƒë∆°n h√†ng:</strong> #${orderId}</div>
              <div><strong>Ng√†y ƒë·∫∑t:</strong> ${formatDate(orderDate)}</div>
              <div><strong>Ph∆∞∆°ng th·ª©c thanh to√°n:</strong> ${paymentMethod}</div>
              <div><strong>Tr·∫°ng th√°i:</strong> <span style="color: #28a745;">ƒêang x·ª≠ l√Ω</span></div>
            </div>
          </div>

          <!-- Shipping Address -->
          <div style="margin-bottom: 25px;">
            <h3 style="color: #333; margin-bottom: 10px;">ƒê·ªãa ch·ªâ giao h√†ng</h3>
            <div style="background: #f8f9fa; padding: 15px; border-radius: 8px;">
              ${shippingAddress}
            </div>
          </div>

          <!-- Products Table -->
          <div style="margin-bottom: 25px;">
            <h3 style="color: #333; margin-bottom: 15px;">Chi ti·∫øt s·∫£n ph·∫©m</h3>
            <table style="width: 100%; border-collapse: collapse; border: 1px solid #eee;">
              <thead>
                <tr style="background: #f8f9fa;">
                  <th style="padding: 15px 10px; text-align: left; border-bottom: 2px solid #ddd;">S·∫£n ph·∫©m</th>
                  <th style="padding: 15px 10px; text-align: center; border-bottom: 2px solid #ddd;">SL</th>
                  <th style="padding: 15px 10px; text-align: right; border-bottom: 2px solid #ddd;">ƒê∆°n gi√°</th>
                  <th style="padding: 15px 10px; text-align: right; border-bottom: 2px solid #ddd;">Th√†nh ti·ªÅn</th>
                </tr>
              </thead>
              <tbody>
                ${productsHTML}
              </tbody>
            </table>
          </div>

          <!-- Order Summary -->
          <div style="background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 25px;">
            <h3 style="margin: 0 0 15px 0; color: #333;">T·ªïng c·ªông</h3>
            <div style="border-bottom: 1px solid #ddd; padding-bottom: 10px; margin-bottom: 10px;">
              <div style="display: flex; justify-content: space-between; margin-bottom: 5px;">
                <span>T·∫°m t√≠nh:</span>
                <span>${formatVND(subtotal)}</span>
              </div>
              <div style="display: flex; justify-content: space-between; margin-bottom: 5px;">
                <span>Ph√≠ v·∫≠n chuy·ªÉn:</span>
                <span>${formatVND(shippingFee)}</span>
              </div>
              ${voucher ? `
              <div style="display: flex; justify-content: space-between; margin-bottom: 5px; color: #28a745;">
                <span>Gi·∫£m gi√° (${voucher.code}):</span>
                <span>-${formatVND(discount)}</span>
              </div>
              ` : ''}
            </div>
            <div style="display: flex; justify-content: space-between; font-size: 18px; font-weight: bold; color: #e74c3c;">
              <span>T·ªïng c·ªông:</span>
              <span>${formatVND(totalAmount)}</span>
            </div>
          </div>

          <!-- Next Steps -->
          <div style="background: #e8f4fd; padding: 20px; border-radius: 8px; border-left: 4px solid #3498db;">
            <h3 style="margin: 0 0 10px 0; color: #2980b9;">B∆∞·ªõc ti·∫øp theo</h3>
            <ul style="margin: 0; padding-left: 20px;">
              <li>Ch√∫ng t√¥i s·∫Ω x·ª≠ l√Ω v√† ƒë√≥ng g√≥i ƒë∆°n h√†ng trong v√≤ng 24h</li>
              <li>B·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c th√¥ng b√°o khi ƒë∆°n h√†ng ƒë∆∞·ª£c giao cho ƒë∆°n v·ªã v·∫≠n chuy·ªÉn</li>
              <li>Th·ªùi gian giao h√†ng d·ª± ki·∫øn: 2-5 ng√†y l√†m vi·ªác</li>
            </ul>
          </div>

        </div>

        <!-- Footer -->
        <div style="background: #2c3e50; color: white; padding: 25px; text-align: center; border-radius: 0 0 10px 10px;">
          <h3 style="margin: 0 0 10px 0;">C·∫ßn h·ªó tr·ª£?</h3>
          <p style="margin: 0 0 15px 0;">Li√™n h·ªá v·ªõi ch√∫ng t√¥i:</p>
          <div style="margin-bottom: 15px;">
            <span style="margin-right: 15px;">üìû 0123-456-789</span>
            <span>üìß support@kazewebsite.com</span>
          </div>
          <p style="margin: 0; font-size: 14px; opacity: 0.8;">
            ¬© ${new Date().getFullYear()} KazeWebsite. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.
          </p>
        </div>

      </body>
      </html>
    `;
  }

  // G·ª≠i email x√°c nh·∫≠n ƒë∆°n h√†ng
  async sendOrderConfirmation(orderData) {
    console.log('Chu·∫©n b·ªã g·ª≠i email t·ªõi:', orderData.customerEmail);
    console.log('S·ª≠ d·ª•ng th√¥ng tin ƒëƒÉng nh·∫≠p:', {
      user: process.env.EMAIL_USER,
      pass: process.env.EMAIL_PASS ? '******' : 'Kh√¥ng c√≥' // Che m·∫≠t kh·∫©u
    });

    try {
      const mailOptions = {
        from: {
          name: 'KazeWebsite',
          address: process.env.EMAIL_USER
        },
        to: orderData.customerEmail,
        subject: `X√°c nh·∫≠n ƒë∆°n h√†ng #${orderData.orderId} - KazeWebsite`,
        html: this.generateOrderConfirmationHTML(orderData)
      };

      console.log('ƒêang g·ª≠i email v·ªõi c√°c t√πy ch·ªçn:', {
        from: mailOptions.from,
        to: mailOptions.to,
        subject: mailOptions.subject
      });

      const result = await this.transporter.sendMail(mailOptions);

      console.log('--- Nodemailer Response ---');
      console.log('Message ID:', result.messageId);
      console.log('Accepted:', result.accepted);
      console.log('Rejected:', result.rejected);
      console.log('Response Code:', result.response);
      console.log('--------------------------');

      console.log('Email x√°c nh·∫≠n ƒë∆°n h√†ng ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng.');
      return { success: true, messageId: result.messageId };

    } catch (error) {
      console.error('--- L·ªñI G·ª¨I EMAIL ---');
      console.error('L·ªói chi ti·∫øt:', error);
      console.error('--------------------');
      return { success: false, error: error.message };
    }
  }

  // G·ª≠i email c·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë∆°n h√†ng
  async sendOrderStatusUpdate(orderData) {
    try {
      const { customerName, customerEmail, orderId, oldStatus, newStatus } = orderData;

      const statusMessages = {
        'ƒëang x·ª≠ l√Ω': 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒëang ƒë∆∞·ª£c x·ª≠ l√Ω',
        'ƒë√£ x√°c nh·∫≠n': 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n',
        'ƒëang giao h√†ng': 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒëang ƒë∆∞·ª£c giao',
        'ƒë√£ giao h√†ng': 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c giao th√†nh c√¥ng',
        'ho√†n th√†nh': 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ ho√†n th√†nh',
        'ƒë√£ h·ªßy': 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ b·ªã h·ªßy'
      };

      const mailOptions = {
        from: {
          name: 'KazeWebsite',
          address: process.env.EMAIL_USER
        },
        to: customerEmail,
        subject: `C·∫≠p nh·∫≠t ƒë∆°n h√†ng #${orderId} - ${statusMessages[newStatus]}`,
        html: `
          <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
            <h2>C·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë∆°n h√†ng</h2>
            <p>Ch√†o ${customerName},</p>
            <p>ƒê∆°n h√†ng #${orderId} c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t tr·∫°ng th√°i:</p>
            <div style="background: #f8f9fa; padding: 15px; border-radius: 8px; margin: 20px 0;">
              <p><strong>Tr·∫°ng th√°i c≈©:</strong> ${oldStatus}</p>
              <p><strong>Tr·∫°ng th√°i m·ªõi:</strong> <span style="color: #28a745;">${newStatus}</span></p>
            </div>
            <p>${statusMessages[newStatus]}</p>
            <p>C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng KazeWebsite!</p>
          </div>
        `
      };

      const result = await this.transporter.sendMail(mailOptions);
      console.log('Email c·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë√£ ƒë∆∞·ª£c g·ª≠i:', result.messageId);
      return { success: true, messageId: result.messageId };

    } catch (error) {
      console.error('L·ªói khi g·ª≠i email c·∫≠p nh·∫≠t tr·∫°ng th√°i:', error);
      return { success: false, error: error.message };
    }
  }

  // Template HTML cho email th√¥ng b√°o thanh to√°n th√†nh c√¥ng
  generatePaymentSuccessHTML(paymentData) {
    const {
      customerName,
      orderId,
      transactionNo,
      paymentAmount,
      paymentDate,
      orderStatus
    } = paymentData;

    // Format ti·ªÅn Vi·ªát
    const formatVND = (amount) => {
      return new Intl.NumberFormat('vi-VN', {
        style: 'currency',
        currency: 'VND'
      }).format(amount);
    };

    // Format ng√†y
    const formatDate = (date) => {
      return new Intl.DateTimeFormat('vi-VN', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
      }).format(new Date(date));
    };

    return `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <title>Thanh to√°n th√†nh c√¥ng - KazeWebsite</title>
        <style>
          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
          .container { max-width: 600px; margin: 0 auto; padding: 20px; }
          .header { background: #28a745; color: white; padding: 20px; text-align: center; border-radius: 8px; }
          .content { background: #f8f9fa; padding: 30px; border-radius: 8px; margin: 20px 0; }
          .success-icon { font-size: 48px; color: #28a745; text-align: center; margin-bottom: 20px; }
          .payment-details { background: white; padding: 20px; border-radius: 6px; margin: 20px 0; }
          .detail-row { display: flex; justify-content: space-between; padding: 10px 0; border-bottom: 1px solid #eee; }
          .amount { font-size: 24px; font-weight: bold; color: #28a745; text-align: center; margin: 20px 0; }
          .footer { text-align: center; padding: 20px; color: #666; font-size: 14px; }
          .btn { background: #007bff; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block; margin: 20px 0; }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <h1>‚úÖ Thanh to√°n th√†nh c√¥ng!</h1>
            <p>C·∫£m ∆°n b·∫°n ƒë√£ thanh to√°n ƒë∆°n h√†ng</p>
          </div>

          <div class="content">
            <div class="success-icon">üéâ</div>
            
            <h2>Xin ch√†o ${customerName},</h2>
            
            <p>Ch√∫ng t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c thanh to√°n c·ªßa b·∫°n cho ƒë∆°n h√†ng <strong>#${orderId}</strong>. Giao d·ªãch ƒë√£ ƒë∆∞·ª£c x·ª≠ l√Ω th√†nh c√¥ng!</p>

            <div class="payment-details">
              <h3>Chi ti·∫øt thanh to√°n:</h3>
              <div class="detail-row">
                <span>M√£ ƒë∆°n h√†ng:</span>
                <span><strong>#${orderId}</strong></span>
              </div>
              <div class="detail-row">
                <span>M√£ giao d·ªãch VNPay:</span>
                <span><strong>${transactionNo}</strong></span>
              </div>
              <div class="detail-row">
                <span>Th·ªùi gian thanh to√°n:</span>
                <span>${formatDate(paymentDate)}</span>
              </div>
              <div class="detail-row">
                <span>Ph∆∞∆°ng th·ª©c thanh to√°n:</span>
                <span><strong>VNPay</strong></span>
              </div>
              <div class="detail-row">
                <span>Tr·∫°ng th√°i ƒë∆°n h√†ng:</span>
                <span><strong style="color: #ffc107;">Ch·ªù x√°c nh·∫≠n</strong></span>
              </div>
            </div>

            <div class="amount">
              S·ªë ti·ªÅn ƒë√£ thanh to√°n: ${formatVND(paymentAmount)}
            </div>

            <p><strong>B∆∞·ªõc ti·∫øp theo:</strong></p>
            <ul>
              <li>ƒê∆°n h√†ng c·ªßa b·∫°n ƒëang ch·ªù ƒë∆∞·ª£c x√°c nh·∫≠n b·ªüi ƒë·ªôi ng≈© c·ªßa ch√∫ng t√¥i</li>
              <li>Ch√∫ng t√¥i s·∫Ω g·ª≠i email th√¥ng b√°o khi ƒë∆°n h√†ng ƒë∆∞·ª£c x√°c nh·∫≠n v√† chu·∫©n b·ªã giao</li>
              <li>B·∫°n c√≥ th·ªÉ theo d√µi tr·∫°ng th√°i ƒë∆°n h√†ng trong t√†i kho·∫£n c·ªßa m√¨nh</li>
            </ul>

            <div style="text-align: center;">
              <a href="http://localhost:3000/bill" class="btn">Xem l·ªãch s·ª≠ ƒë∆°n h√†ng</a>
            </div>
          </div>

          <div class="footer">
            <p>C·∫£m ∆°n b·∫°n ƒë√£ mua s·∫Øm t·∫°i <strong>KazeWebsite</strong>!</p>
            <p>N·∫øu c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i.</p>
            <p><em>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</em></p>
          </div>
        </div>
      </body>
      </html>
    `;
  }

  // G·ª≠i email th√¥ng b√°o thanh to√°n th√†nh c√¥ng
  async sendPaymentSuccess(paymentData) {
    try {
      const mailOptions = {
        from: {
          name: 'KazeWebsite',
          address: process.env.EMAIL_USER
        },
        to: paymentData.customerEmail,
        subject: `‚úÖ Thanh to√°n th√†nh c√¥ng ƒë∆°n h√†ng #${paymentData.orderId} - KazeWebsite`,
        html: this.generatePaymentSuccessHTML(paymentData)
      };

      const result = await this.transporter.sendMail(mailOptions);
      console.log('Email th√¥ng b√°o thanh to√°n th√†nh c√¥ng ƒë√£ ƒë∆∞·ª£c g·ª≠i:', result.messageId);
      return { success: true, messageId: result.messageId };

    } catch (error) {
      console.error('L·ªói khi g·ª≠i email th√¥ng b√°o thanh to√°n:', error);
      return { success: false, error: error.message };
    }
  }

  // Template HTML cho email reset password
  generatePasswordResetHTML(resetData) {
    const { userName, resetLink, expiryTime } = resetData;

    return `
      <!DOCTYPE html>
      <html lang="vi">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u - KazeWebsite</title>
        <style>
          body { margin: 0; padding: 0; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; }
          .container { max-width: 600px; margin: 0 auto; background-color: #ffffff; }
          .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 30px; text-align: center; }
          .header h1 { color: #ffffff; margin: 0; font-size: 28px; font-weight: 600; }
          .content { padding: 40px 30px; }
          .greeting { font-size: 18px; color: #333; margin-bottom: 20px; }
          .message { font-size: 16px; color: #666; line-height: 1.6; margin-bottom: 30px; }
          .reset-button { text-align: center; margin: 30px 0; }
          .reset-button a { 
            display: inline-block; 
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); 
            color: #ffffff; 
            padding: 15px 30px; 
            text-decoration: none; 
            border-radius: 8px; 
            font-weight: 600; 
            font-size: 16px;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
          }
          .reset-button a:hover { transform: translateY(-2px); }
          .expiry-info { 
            background-color: #fff3cd; 
            border: 1px solid #ffeaa7; 
            padding: 15px; 
            border-radius: 8px; 
            margin: 20px 0; 
            font-size: 14px; 
            color: #856404; 
          }
          .footer { background-color: #f8f9fa; padding: 20px; text-align: center; font-size: 14px; color: #666; }
          .divider { height: 1px; background-color: #e9ecef; margin: 30px 0; }
          .security-note { background-color: #d1ecf1; border: 1px solid #bee5eb; padding: 15px; border-radius: 8px; margin: 20px 0; font-size: 14px; color: #0c5460; }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <h1>üîê ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</h1>
          </div>
          
          <div class="content">
            <div class="greeting">Xin ch√†o ${userName || 'b·∫°n'},</div>
            
            <div class="message">
              Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n KazeWebsite c·ªßa b·∫°n. 
              ƒê·ªÉ t·∫°o m·∫≠t kh·∫©u m·ªõi, vui l√≤ng nh·∫•n v√†o n√∫t b√™n d∆∞·ªõi:
            </div>
            
            <div class="reset-button">
              <a href="${resetLink}" target="_blank">ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</a>
            </div>
            
            <div class="expiry-info">
              ‚è∞ <strong>L∆∞u √Ω:</strong> Link n√†y s·∫Ω h·∫øt h·∫°n sau ${expiryTime} ph√∫t. 
              N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán trong th·ªùi gian n√†y, b·∫°n s·∫Ω c·∫ßn y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u m·ªõi.
            </div>
            
            <div class="divider"></div>
            
            <div class="security-note">
              üõ°Ô∏è <strong>B·∫£o m·∫≠t t√†i kho·∫£n:</strong><br>
              ‚Ä¢ Kh√¥ng chia s·∫ª link n√†y v·ªõi b·∫•t k·ª≥ ai<br>
              ‚Ä¢ N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y<br>
              ‚Ä¢ Li√™n h·ªá v·ªõi ch√∫ng t√¥i ngay l·∫≠p t·ª©c n·∫øu b·∫°n nghi ng·ªù t√†i kho·∫£n b·ªã x√¢m nh·∫≠p
            </div>
            
            <div class="message">
              N·∫øu n√∫t kh√¥ng ho·∫°t ƒë·ªông, b·∫°n c√≥ th·ªÉ copy v√† paste link sau v√†o tr√¨nh duy·ªát:<br>
              <a href="${resetLink}" style="color: #667eea; word-break: break-all;">${resetLink}</a>
            </div>
          </div>
          
          <div class="footer">
            <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª´ <strong>KazeWebsite</strong></p>
            <p>¬© ${new Date().getFullYear()} KazeWebsite. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
          </div>
        </div>
      </body>
      </html>
    `;
  }

  // G·ª≠i email reset password
  async sendPasswordReset(resetData) {
    console.log('Chu·∫©n b·ªã g·ª≠i email reset password t·ªõi:', resetData.userEmail);

    try {
      const mailOptions = {
        from: {
          name: 'KazeWebsite',
          address: process.env.EMAIL_USER
        },
        to: resetData.userEmail,
        subject: 'üîê ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u t√†i kho·∫£n KazeWebsite',
        html: this.generatePasswordResetHTML(resetData)
      };

      console.log('ƒêang g·ª≠i email reset password v·ªõi c√°c t√πy ch·ªçn:', {
        from: mailOptions.from,
        to: mailOptions.to,
        subject: mailOptions.subject
      });

      const result = await this.transporter.sendMail(mailOptions);

      console.log('--- Nodemailer Response ---');
      console.log('Message ID:', result.messageId);
      console.log('Accepted:', result.accepted);
      console.log('Rejected:', result.rejected);
      console.log('Response Code:', result.response);
      console.log('--------------------------');

      console.log('Email reset password ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng.');
      return { success: true, messageId: result.messageId };

    } catch (error) {
      console.error('--- L·ªñI G·ª¨I EMAIL RESET PASSWORD ---');
      console.error('L·ªói chi ti·∫øt:', error);
      console.error('----------------------------------');
      return { success: false, error: error.message };
    }
  }
}

module.exports = new EmailService();
